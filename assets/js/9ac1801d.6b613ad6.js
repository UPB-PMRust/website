"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6318],{47690:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>o,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"project/2025/nicolae.dragu/index","title":"Snake","description":"Snake game on a display, controlled by buttons.","source":"@site/versioned_docs/version-acs_cc/project/2025/nicolae.dragu/index.md","sourceDirName":"project/2025/nicolae.dragu","slug":"/project/2025/nicolae.dragu/","permalink":"/docs/acs_cc/project/2025/nicolae.dragu/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/nicolae.dragu/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Rust-Embedded Weather Station","permalink":"/docs/acs_cc/project/2025/mircea.tusca/"},"next":{"title":"CrateDigger","permalink":"/docs/acs_cc/project/2025/npopa/"}}');var i=s(74848),r=s(28453);const d={},a="Snake",l={},c=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Game Flow:",id:"game-flow",level:3},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function h(e){const t={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"snake",children:"Snake"})}),"\n",(0,i.jsx)(t.p,{children:"Snake game on a display, controlled by buttons."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Author"}),": Nicolae Dragu ",(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.strong,{children:"GitHub Project Link"}),": ",(0,i.jsx)(t.a,{href:"https://github.com/UPB-PMRust-Students/proiect-nicolaedragu",children:"https://github.com/UPB-PMRust-Students/proiect-nicolaedragu"})]})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Players control a growing snake to consume food, displayed on a screen. The game signals its conclusion with a dedicated red LED illuminating upon the snake's death, when he collides with itself."}),"\n",(0,i.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsx)(t.p,{children:"I was inspired to create this classic game because of its nostalgic value to me, as I used to play it on my old Nokia phone. I wanted to recreate that experience in this project, as it is an engaging way to learn more about the technologies I am using."}),"\n",(0,i.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The Raspberry Pi Pico serves as the main controller, running the game logic and handling all input/output operations."}),"\n",(0,i.jsx)(t.li,{children:'OLED Display 0.96": Renders the Snake game in real time, showing the snake and the fruits.'}),"\n",(0,i.jsx)(t.li,{children:"Directional Buttons (GPIO): Allow the player to control the snake's movement (UP / DOWN / LEFT / RIGHT)."}),"\n",(0,i.jsx)(t.li,{children:"Red LED (GPIO): Lights up when the player loses (collision with itself or wall)."}),"\n",(0,i.jsx)(t.li,{children:"Buzzer (PWM/GPIO): Emits a short sound whenever the snake eats a fruit."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"game-flow",children:"Game Flow:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Startup: The OLED shows the welcome screen and waits for a button press to start the game."}),"\n",(0,i.jsx)(t.li,{children:"Gameplay: The snake moves continuously; button presses update its direction."}),"\n",(0,i.jsx)(t.li,{children:"Fruit Collected: The buzzer plays a sound and the snake grows."}),"\n",(0,i.jsx)(t.li,{children:"Game Over: Collision triggers the red LED and halts the game until reset."}),"\n",(0,i.jsx)(t.li,{children:"Restart: A button press resets the game state and restarts the loop."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Here is the block scheme and how the components are all conected:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"schema",src:s(25161).A+"",width:"941",height:"676"})}),"\n",(0,i.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,i.jsx)(t.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,i.jsx)(t.p,{children:"Bought the components and planned the project, preparing the hardware and software technologies."}),"\n",(0,i.jsx)(t.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"proiect_hardware",src:s(5869).A+"",width:"731",height:"768"})}),"\n",(0,i.jsx)(t.p,{children:"I assembled the components and tested them."}),"\n",(0,i.jsx)(t.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,i.jsx)(t.p,{children:"I finished the project. I ended up using the led to indicate that a fruit had been eaten by the snake, and the buzzer to play the Nokia theme when I'm not in a game, meaning before the game when you wait for input to start the game.\nHere is a video of the final result:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://youtu.be/3r2ZJlaT-eM?si=ndewh0CsY7dM61zA",children:(0,i.jsx)(t.img,{src:"https://youtu.be/3r2ZJlaT-eM?si=ndewh0CsY7dM61zA",alt:"Demo"})})}),"\n",(0,i.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"1x Raspberry Pi Pico 2W: acts as the primary processing unit."}),"\n",(0,i.jsx)(t.li,{children:"1x OLED Display, 0.96 inch: Continuously displays the game."}),"\n",(0,i.jsx)(t.li,{children:"5x Buttons: Provide real-time directional control of the snake and the restart game function."}),"\n",(0,i.jsx)(t.li,{children:"1x LED: Indicates game-over condition."}),"\n",(0,i.jsx)(t.li,{children:"1x Buzzer: Adds auditory feedback on successful fruit collection."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"kicad",src:s(58594).A+"",width:"1123",height:"794"})}),"\n",(0,i.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Device"}),(0,i.jsx)(t.th,{children:"Usage"}),(0,i.jsx)(t.th,{children:"Price"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"[Rapspberry Pi Pico W]"}),(0,i.jsx)(t.td,{children:"The microcontroller"}),(0,i.jsx)(t.td,{children:"[35 RON x 2]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"[LED]"}),(0,i.jsx)(t.td,{children:"The LED"}),(0,i.jsx)(t.td,{children:"[0.2 RON]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"[Buzzer]"}),(0,i.jsx)(t.td,{children:"The Buzzer"}),(0,i.jsx)(t.td,{children:"[4 RON]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"[OLED Display]"}),(0,i.jsx)(t.td,{children:"The OLED Display"}),(0,i.jsx)(t.td,{children:"[40 RON]"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"[Buttons]"}),(0,i.jsx)(t.td,{children:"The Buttons"}),(0,i.jsx)(t.td,{children:"[0.5 RON x 5]"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Library"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Usage"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy"})}),(0,i.jsx)(t.td,{children:"Embassy"}),(0,i.jsx)(t.td,{children:"An asynchronous executor and Hardware Abstraction Layer (HAL) designed for constructing embedded applications in Rust."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://docs.embassy.dev/embassy-executor/git/std/index.html",children:"embassy-executor"})}),(0,i.jsx)(t.td,{children:"Embassy Executor"}),(0,i.jsx)(t.td,{children:"Used for task scheduling and asynchronous programming"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://docs.embassy.dev/embassy-rp/git/rp2040/index.html",children:"embassy-rp"})}),(0,i.jsx)(t.td,{children:"Embassy RP"}),(0,i.jsx)(t.td,{children:"Used for initializing and interacting with peripherals"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://docs.embassy.dev/embassy-stm32/git/stm32c011d6/gpio/index.html",children:"gpio"})}),(0,i.jsx)(t.td,{children:"GPIO"}),(0,i.jsx)(t.td,{children:"Used for interacting with GPIO pins"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://docs.rs/embedded-hal/latest/embedded_hal/index.html",children:"embedded-hal"})}),(0,i.jsx)(t.td,{children:"Embedded HAL"}),(0,i.jsx)(t.td,{children:"A set of traits for embedded hardware abstraction"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://docs.rs/defmt/latest/defmt/index.html",children:"defmt"})}),(0,i.jsx)(t.td,{children:"Defmt"}),(0,i.jsx)(t.td,{children:"A logging framework for embedded systems"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.youtube.com/@Science.Buddies",children:"Science Buddies"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/pico-series.html",children:"Pico-series Microcontrollers Documentation"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.freecodecamp.org/news/tag/rust/",children:"Free Code Camp - Rust tutorials"})}),"\n"]})]})}function o(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},58594:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/kicad-8ec1f3bbd7d476b99cf58310d7ef0f40.svg"},5869:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/proiect_hardware-5e6ac90331959f5ad248771beb462de3.webp"},25161:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/schema-58394dd95a0de571cabb11467ecae019.webp"},28453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>a});var n=s(96540);const i={},r=n.createContext(i);function d(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);