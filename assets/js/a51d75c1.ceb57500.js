"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8954],{64882:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"project/2025/iulia_elena.giuroiu/index","title":"Security System","description":"A smart access control system using username and PIN authentication","source":"@site/versioned_docs/version-acs_cc/project/2025/iulia_elena.giuroiu/index.md","sourceDirName":"project/2025/iulia_elena.giuroiu","slug":"/project/2025/iulia_elena.giuroiu/","permalink":"/docs/acs_cc/project/2025/iulia_elena.giuroiu/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/iulia_elena.giuroiu/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Smart Plant Watering System","permalink":"/docs/acs_cc/project/2025/iulia_andreea.lovin/"},"next":{"title":"The Mini Arcade","permalink":"/docs/acs_cc/project/2025/iulian.alexa/"}}');var s=i(74848),t=i(28453);const a={},l="Security System",d={},c=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Main architectural components:",id:"main-architectural-components",level:3},{value:"Flowchart Diagram",id:"flowchart-diagram",level:3},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Build Gallery",id:"build-gallery",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Core features",id:"core-features",level:3},{value:"Tasks",id:"tasks",level:3},{value:"Peripheral Handling",id:"peripheral-handling",level:3},{value:"Software Design",id:"software-design",level:2},{value:"Detailed Architecture",id:"detailed-architecture",level:3},{value:"Core State Machine",id:"core-state-machine",level:4},{value:"Data Structures",id:"data-structures",level:4},{value:"Flash Memory Management",id:"flash-memory-management",level:4},{value:"Peripheral Integration",id:"peripheral-integration",level:4},{value:"Functional Flow Diagram",id:"functional-flow-diagram",level:3},{value:"Key Software Features",id:"key-software-features",level:3},{value:"1. <strong>Async Task Management</strong>",id:"1-async-task-management",level:4},{value:"2. <strong>Security Implementation</strong>",id:"2-security-implementation",level:4},{value:"3. <strong>Data Persistence Strategy</strong>",id:"3-data-persistence-strategy",level:4},{value:"4. <strong>User Experience Design</strong>",id:"4-user-experience-design",level:4},{value:"5. <strong>System Robustness</strong>",id:"5-system-robustness",level:4},{value:"Performance Characteristics",id:"performance-characteristics",level:3},{value:"Links",id:"links",level:2}];function o(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"security-system",children:"Security System"})}),"\n",(0,s.jsx)(n.p,{children:"A smart access control system using username and PIN authentication"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.mdxAdmonitionTitle,{}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Author"}),": Iulia-Elena Giuroiu  ",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Group"}),": 333CC ",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"GitHub Project Link"}),": ",(0,s.jsx)(n.a,{href:"https://github.com/UPB-PMRust-Students/proiect-IuliaGIE",children:"source code"})]})]}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"This project implements a smart security system for controlling access to a restricted area. Authentication is based on a 4-character username and a 4-digit PIN entered via a matrix keypad. Only one person is allowed inside at any given time. If motion is detected without valid authentication, an alarm is triggered using a buzzer and flashing red LED."}),"\n",(0,s.jsx)(n.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsx)(n.p,{children:"The motivation behind this project is to combine embedded programming with real-world security applications. It provides a simple but effective way of managing access, detecting unauthorized entries, and signaling alerts."}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The system is organized modularly, with each logic component responsible for a distinct functionality. They communicate through events triggered by sensors and shared internal states."}),"\n",(0,s.jsx)(n.h3,{id:"main-architectural-components",children:"Main architectural components:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication Module"})," \u2013 handles input and validation of username and PIN"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Access Control"})," \u2013 controls the servo motor that opens or closes the door"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Alert Module"})," \u2013 detects unauthorized movement and activates the red LED and buzzer"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Display Module"})," \u2013 shows messages on an OLED or LCD screen"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State Management"})," \u2013 allows access for only one person at a time"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"flowchart-diagram",children:"Flowchart Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:'flowchart TB\r\n    PICO["Raspberry Pi Pico W"]\r\n\r\n    OLED["LCD 1602 (I2C)"]\r\n    KEYPAD["Keypad 4x4"]\r\n    BUZZER["Buzzer (BZ1)"]\r\n    LED_RED["Red LED"]\r\n    LED_GREEN["Green LED"]\r\n    MOTOR["Servo Motor SG90"]\r\n    PIR["PIR Motion Sensor"]\r\n    BUTTON["Push Button (SW1)"]\r\n\r\n    PICO --\x3e OLED\r\n    PICO --\x3e KEYPAD\r\n    PICO --\x3e BUZZER\r\n    PICO --\x3e LED_RED\r\n    PICO --\x3e LED_GREEN\r\n    PICO --\x3e MOTOR\r\n    PICO --\x3e PIR\r\n    PICO --\x3e BUTTON\r\n\r\n    subgraph OUTPUTS\r\n        LED_RED\r\n        LED_GREEN\r\n        MOTOR\r\n        BUZZER\r\n    end\r\n\r\n    subgraph INPUTS\r\n        PIR\r\n        KEYPAD\r\n        BUTTON\r\n    end\r\n'}),"\n",(0,s.jsx)(n.h2,{id:"log",children:"Log"}),"\n",(0,s.jsx)(n.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,s.jsx)(n.p,{children:"During this week, I focused on defining the concept and direction of the project. I analyzed the required functionality and started outlining the system specifications. I identified the components needed (PIR sensor, keypad, LEDs, servo motor, buzzer, LCD, push button) and mapped them to the available GPIOs on the Raspberry Pi Pico 2W."}),"\n",(0,s.jsx)(n.p,{children:"I also considered how the different modules will interact\u2014such as how authentication should trigger access control, and how motion detection without prior authentication should trigger an alert. I began drafting the hardware schematic in KiCad and planned the software architecture using Embassy\u2019s async multitasking. Additionally, I evaluated what parts I already had available and what still needed to be sourced."}),"\n",(0,s.jsx)(n.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,s.jsx)(n.p,{children:"This week I connected each hardware component to the Raspberry Pi Pico 2W individually and tested its functionality. Using small, dedicated Rust programs, I verified that every module operated correctly in isolation. This included:"}),"\n",(0,s.jsx)(n.p,{children:"reading input from the matrix keypad (keypad.rs),"}),"\n",(0,s.jsx)(n.p,{children:"detecting motion with the PIR sensor (senzorpir.rs),"}),"\n",(0,s.jsx)(n.p,{children:"controlling the servo motor via PWM (servomotor.rs),"}),"\n",(0,s.jsx)(n.p,{children:"toggling LEDs and activating the buzzer (buzzer.rs),"}),"\n",(0,s.jsx)(n.p,{children:"displaying messages on the LCD1602 via I2C (ecran.rs),"}),"\n",(0,s.jsx)(n.p,{children:"and reading input from the push button (button.rs)."}),"\n",(0,s.jsx)(n.p,{children:"These tests ensured that the electrical connections were correct and that each peripheral worked reliably before integrating them into the main system."}),"\n",(0,s.jsx)(n.h3,{id:"build-gallery",children:"Build Gallery"}),"\n",(0,s.jsx)(n.p,{children:"Here are several photos taken during development and testing:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"System Overview"}),(0,s.jsx)(n.th,{children:"LCD & Servo Testing"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.img,{alt:"Final Build",src:i(83194).A+"",width:"978",height:"498"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.img,{alt:"LCD Servo",src:i(49122).A+"",width:"776",height:"470"})})]})})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"LED Indicator Test"}),(0,s.jsx)(n.th,{children:"Keypad + PIR + Buzzer Test"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.img,{alt:"LEDs",src:i(86664).A+"",width:"615",height:"368"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.img,{alt:"Keypad PIR",src:i(67834).A+"",width:"450",height:"429"})})]})})]}),"\n",(0,s.jsx)(n.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,s.jsx)(n.p,{children:"This week I integrated all the individual components into a unified authentication system. I implemented the state machine architecture using Embassy's async framework, enabling smooth transitions between authentication states. The main challenges were:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flash memory integration"})," - implementing persistent storage for users, logs, and system time with checksum validation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State management"})," - coordinating between authentication, admin menu, motion detection, and alarm states"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User interface flow"})," - creating intuitive keypad navigation and LCD feedback"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data persistence"})," - ensuring all user data and logs survive power cycles"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Hardware modification note"}),": During integration testing, I discovered that the servo motor component was defective and not responding to PWM signals correctly. Rather than delay the project, I made the strategic decision to remove the physical door control mechanism and instead focus on implementing comprehensive administrative functionality. This pivot allowed me to develop advanced features including:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Complete user management system with add/remove capabilities"}),"\n",(0,s.jsx)(n.li,{children:"Detailed access log viewing and navigation"}),"\n",(0,s.jsx)(n.li,{children:"System reset functionality with confirmation"}),"\n",(0,s.jsx)(n.li,{children:"Enhanced security with motion-triggered lockdown (without physical door control)"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The final implementation includes a complete admin menu accessible via hardware button, allowing user management and system reset functionality. All authentication attempts are logged with timestamps, and the PIR sensor provides motion-triggered security lockdown. This approach resulted in a more sophisticated security monitoring system rather than a simple access control device."}),"\n",(0,s.jsx)(n.p,{children:"Final week focused on testing, debugging, and documentation. I conducted comprehensive testing of all system states, edge cases, and error conditions. Performance optimizations were made to reduce flash write cycles and improve response times. The system now operates reliably with full data persistence and security features."}),"\n",(0,s.jsx)(n.p,{children:"The decision to pivot from physical access control to comprehensive security monitoring proved beneficial, as it allowed for deeper exploration of embedded data management, state machine design, and user interface development. The resulting system demonstrates advanced embedded programming concepts while maintaining practical security applications."}),"\n",(0,s.jsx)(n.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsx)(n.p,{children:"The system uses two Raspberry Pi Pico 2W boards. The main board handles authentication, motor control, and alert logic, while the second board is optional for debugging or logging. All components interact via GPIO, PWM, and I\xb2C protocols."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Hardware Device"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"Usage"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html",children:"Raspberry Pi Pico 2W"})}),(0,s.jsx)(n.td,{children:"Main microcontroller"}),(0,s.jsx)(n.td,{children:"Controls authentication, logic, and peripherals"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Raspberry Pi Pico 2W (Debug)"}),(0,s.jsx)(n.td,{children:"Debugging"}),(0,s.jsx)(n.td,{children:"UART logging and state tracing"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/senzori-senzori-de-atingere/470-tastatura-matriceala-4x4-cu-conector-pin-de-tip-mama.html",children:"Matrix Keypad 4x4"})}),(0,s.jsx)(n.td,{children:"Input"}),(0,s.jsx)(n.td,{children:"User input for username and PIN"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/senzori-senzori-pir/106-modul-senzor-pir-hc-sr501.html",children:"PIR Motion Sensor HC-SR501"})}),(0,s.jsx)(n.td,{children:"Detection"}),(0,s.jsx)(n.td,{children:"Triggers alert on unauthorized motion"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/motoare-servomotoare/2261-micro-servo-motor-sg90-180.html",children:"Micro Servo SG90 180\xb0"})}),(0,s.jsx)(n.td,{children:"Actuator"}),(0,s.jsx)(n.td,{children:"Controls door movement"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/semnalizare-audio-vizuala/1340-buzzer-activ-de-5v.html",children:"Buzzer 3V/5V"})}),(0,s.jsx)(n.td,{children:"Alert"}),(0,s.jsx)(n.td,{children:"Sound alarm on intrusions"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/leduri/83-led-rosu-3mm-cu-lentile-difuze.html",children:"LEDs (Red, Green)"})}),(0,s.jsx)(n.td,{children:"Indicators"}),(0,s.jsx)(n.td,{children:"Red = alert, Green = access granted"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-lcd-uri/62-lcd-1602-cu-interfata-i2c-si-backlight-galben-verde.html",children:"LCD 1602 I2C"})}),(0,s.jsx)(n.td,{children:"Display"}),(0,s.jsx)(n.td,{children:"Shows system messages"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.optimusdigital.ro/ro/prototipare-breadboard-uri/8-breadboard-830-points.html",children:"Breadboard (400 & 830 pts)"})}),(0,s.jsx)(n.td,{children:"Prototyping"}),(0,s.jsx)(n.td,{children:"Assembling components"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Resistors (220\u03a9 \u2013 1k\u03a9)"}),(0,s.jsx)(n.td,{children:"Safety"}),(0,s.jsx)(n.td,{children:"Limits LED current"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"USB Power Supply"}),(0,s.jsx)(n.td,{children:"Power"}),(0,s.jsx)(n.td,{children:"Powers boards and modules"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"schematics",children:"Schematics"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Electrical Schematic",src:i(29851).A+"",width:"1024",height:"724"})}),"\n",(0,s.jsx)(n.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Product"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"Quantity"}),(0,s.jsx)(n.th,{children:"Unit Price"}),(0,s.jsx)(n.th,{children:"Total Price"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PIR Motion Sensor HC-SR501"}),(0,s.jsx)(n.td,{children:"Movement detection"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"5.99 lei"}),(0,s.jsx)(n.td,{children:"5.99 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Matrix Keypad 4x4"}),(0,s.jsx)(n.td,{children:"User input"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"6.99 lei"}),(0,s.jsx)(n.td,{children:"6.99 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"LCD 1602 I2C (Yellow-Green)"}),(0,s.jsx)(n.td,{children:"Display"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"14.99 lei"}),(0,s.jsx)(n.td,{children:"14.99 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Buzzer 3V"}),(0,s.jsx)(n.td,{children:"Audio signal"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"0.99 lei"}),(0,s.jsx)(n.td,{children:"0.99 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Breadboard HQ 400pts"}),(0,s.jsx)(n.td,{children:"Assembly"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"4.56 lei"}),(0,s.jsx)(n.td,{children:"4.56 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Breadboard HQ 830pts"}),(0,s.jsx)(n.td,{children:"Expanded assembly"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"9.98 lei"}),(0,s.jsx)(n.td,{children:"9.98 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Raspberry Pi Pico 2W"}),(0,s.jsx)(n.td,{children:"Main + debug boards"}),(0,s.jsx)(n.td,{children:"2"}),(0,s.jsx)(n.td,{children:"39.66 lei"}),(0,s.jsx)(n.td,{children:"79.32 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Green LED 3mm"}),(0,s.jsx)(n.td,{children:"Visual indicator"}),(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:"0.39 lei"}),(0,s.jsx)(n.td,{children:"1.17 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Red LED 3mm"}),(0,s.jsx)(n.td,{children:"Visual alert"}),(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:"0.39 lei"}),(0,s.jsx)(n.td,{children:"1.17 lei"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SG90 Servo"}),(0,s.jsx)(n.td,{children:"Door control"}),(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"11.99 lei"}),(0,s.jsx)(n.td,{children:"11.99 lei"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"software",children:"Software"}),"\n",(0,s.jsx)(n.p,{children:"The firmware is written in Rust using an asynchronous multitasking model powered by Embassy."}),"\n",(0,s.jsx)(n.h3,{id:"core-features",children:"Core features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Async architecture"})," with no RTOS required"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rust embedded"}),": fully safe, low-level control over peripherals"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Efficient resource usage"})," on the RP2040 dual-core microcontroller"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"tasks",children:"Tasks"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Authentication Task"}),": Reads input from the keypad, validates username and PIN"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Access Task"}),": Controls the door via the servo motor and manages door state logic"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Alert Task"}),": Listens for motion events from the PIR sensor and activates the buzzer and red LED if motion is detected without authentication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Display Task"}),": Shows real-time messages and system prompts via the LCD1602 using I2C"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"peripheral-handling",children:"Peripheral Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GPIO"}),": Used for keypad input, LED control, and buzzer signal"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PWM"}),": Drives the buzzer and smoothly dims LEDs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"I2C"}),": Communication with the LCD display"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Task synchronization"}),": Performed using Embassy's async/await runtime, avoiding blocking calls and ensuring responsive behavior"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"software-design",children:"Software Design"}),"\n",(0,s.jsx)(n.h3,{id:"detailed-architecture",children:"Detailed Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The software follows an event-driven, async architecture built on Embassy framework. The system operates as a finite state machine with persistent data storage in flash memory."}),"\n",(0,s.jsx)(n.h4,{id:"core-state-machine",children:"Core State Machine"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"#[derive(Debug, PartialEq)]\r\nenum AuthState {\r\n    EnterUsername,      // Waiting for 4-character username input\r\n    EnterPin,           // Waiting for 4-digit PIN input  \r\n    AuthResult,         // Processing authentication\r\n    Authenticated,      // User successfully logged in\r\n    AdminMenu,          // Admin-only menu system\r\n    ViewLogs,           // Display access logs\r\n    AddUserUsername,    // Admin adding new user - username phase\r\n    AddUserPin,         // Admin adding new user - PIN phase\r\n    ResetConfirm,       // System reset confirmation\r\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"data-structures",children:"Data Structures"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"User Management:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"struct UserCredentials {\r\n    username: [char; 4],    // 4-character username\r\n    pin: [char; 4],         // 4-digit PIN\r\n    is_active: bool,        // Account status\r\n}\r\n\r\nstruct UserDataFlash {\r\n    magic: u32,                              // Validation marker (0xDEADBEEF)\r\n    users: [UserCredentials; MAX_USERS],     // User array (max 10)\r\n    checksum: u32,                           // Data integrity check\r\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Access Logging:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"struct AccessLog {\r\n    username: [char; 4],    // User who attempted access\r\n    timestamp: u64,         // System uptime in seconds\r\n    success: bool,          // Authentication result\r\n    is_active: bool,        // Log entry validity\r\n}\r\n\r\nstruct LogDataFlash {\r\n    magic: u32,                          // Validation marker (0xFEEDFACE)\r\n    logs: [AccessLog; MAX_LOGS],         // Log entries (max 25)\r\n    log_count: usize,                    // Active log count\r\n    checksum: u32,                       // Data integrity check\r\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"flash-memory-management",children:"Flash Memory Management"}),"\n",(0,s.jsx)(n.p,{children:"The system uses the last 12KB of flash memory for persistent storage:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"System Time"})," (4KB sector): Continuous uptime tracking"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Data"})," (4KB sector): Authentication credentials"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Access Logs"})," (4KB sector): Security audit trail"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Each sector includes magic numbers and checksums for corruption detection and data validation."}),"\n",(0,s.jsx)(n.h4,{id:"peripheral-integration",children:"Peripheral Integration"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Input Handling:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"4x4 Matrix Keypad"}),": Scanned via GPIO polling with debouncing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PIR Motion Sensor"}),": Digital input with motion-triggered security lockdown"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Admin Button"}),": Hardware interrupt for menu access"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Output Control:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"16x2 LCD (I2C)"}),": User interface and system messages"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PWM Buzzer"}),": Audio alarm during security events"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LED Indicators"}),": Green (ready/authenticated), Red (alarm/error)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Flash Operations:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Async Read/Write"}),": Non-blocking flash operations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sector Management"}),": 4KB sector erase/write cycles"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Validation"}),": Magic number and checksum verification"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"functional-flow-diagram",children:"Functional Flow Diagram"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart TD\r\n    START([System Boot]) --\x3e INIT[Initialize Hardware]\r\n    INIT --\x3e LOAD[Load Data from Flash]\r\n    LOAD --\x3e READY[Ready State - Green LED]\r\n    \r\n    READY --\x3e INPUT{Keypad Input?}\r\n    INPUT --\x3e|Yes| AUTH[Authentication Process]\r\n    INPUT --\x3e|Motion Detected| ALARM[Trigger Alarm]\r\n    INPUT --\x3e|No| TIME[Update System Time]\r\n    \r\n    AUTH --\x3e VALID{Valid Credentials?}\r\n    VALID --\x3e|Yes| LOG_SUCCESS[Log Success + Grant Access]\r\n    VALID --\x3e|No| LOG_FAIL[Log Failure + Deny Access]\r\n    \r\n    LOG_SUCCESS --\x3e AUTHENTICATED[Authenticated State]\r\n    LOG_FAIL --\x3e READY\r\n    \r\n    AUTHENTICATED --\x3e ADMIN_BTN{Admin Button?}\r\n    ADMIN_BTN --\x3e|Yes + Admin User| ADMIN_MENU[Admin Menu]\r\n    ADMIN_BTN --\x3e|No| LOGOUT{Logout Request?}\r\n    \r\n    ADMIN_MENU --\x3e ADD_USER[Add New User]\r\n    ADMIN_MENU --\x3e VIEW_LOGS[View Access Logs]\r\n    ADMIN_MENU --\x3e RESET_SYS[Reset System]\r\n    ADMIN_MENU --\x3e EXIT_ADMIN[Exit to Authenticated]\r\n    \r\n    ADD_USER --\x3e SAVE_FLASH[Save to Flash]\r\n    RESET_SYS --\x3e ERASE_FLASH[Erase All Data]\r\n    ERASE_FLASH --\x3e INIT\r\n    \r\n    ALARM --\x3e BUZZER[Activate Buzzer + Red LED]\r\n    BUZZER --\x3e MOTION_STOP{Motion Stopped?}\r\n    MOTION_STOP --\x3e|Yes| READY\r\n    MOTION_STOP --\x3e|No| BUZZER\r\n    \r\n    LOGOUT --\x3e|Yes| READY\r\n    LOGOUT --\x3e|No| AUTHENTICATED\r\n    \r\n    TIME --\x3e SAVE_TIME{Save Time?}\r\n    SAVE_TIME --\x3e|Every 60s| FLASH_TIME[Update Flash]\r\n    SAVE_TIME --\x3e|No| INPUT\r\n    FLASH_TIME --\x3e INPUT\r\n    \r\n    SAVE_FLASH --\x3e ADMIN_MENU\r\n    EXIT_ADMIN --\x3e AUTHENTICATED\r\n    VIEW_LOGS --\x3e ADMIN_MENU"}),"\n",(0,s.jsx)(n.h3,{id:"key-software-features",children:"Key Software Features"}),"\n",(0,s.jsxs)(n.h4,{id:"1-async-task-management",children:["1. ",(0,s.jsx)(n.strong,{children:"Async Task Management"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Single-threaded cooperative multitasking"}),"\n",(0,s.jsx)(n.li,{children:"Non-blocking I/O operations"}),"\n",(0,s.jsx)(n.li,{children:"Efficient resource utilization on RP2040"}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"2-security-implementation",children:["2. ",(0,s.jsx)(n.strong,{children:"Security Implementation"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["PIN masking during entry (",(0,s.jsx)(n.code,{children:"****"})," display)"]}),"\n",(0,s.jsx)(n.li,{children:"Motion-triggered lockdown with audio/visual alarm"}),"\n",(0,s.jsx)(n.li,{children:"Complete audit trail with timestamps"}),"\n",(0,s.jsx)(n.li,{children:"Checksum validation for stored data"}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"3-data-persistence-strategy",children:["3. ",(0,s.jsx)(n.strong,{children:"Data Persistence Strategy"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Periodic Saves"}),": System time every 60 seconds"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Immediate Saves"}),": User data and logs after modifications"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Corruption Recovery"}),": Magic number validation and checksum verification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Wear Leveling"}),": Minimal flash write cycles through strategic timing"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"4-user-experience-design",children:["4. ",(0,s.jsx)(n.strong,{children:"User Experience Design"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clear LCD Prompts"}),": Step-by-step authentication guidance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Visual Feedback"}),": LED status indicators for all states"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Error Handling"}),": Graceful recovery from invalid inputs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Admin Interface"}),": Hardware button activation with menu navigation"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"5-system-robustness",children:["5. ",(0,s.jsx)(n.strong,{children:"System Robustness"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Debounced Input"}),": Prevents multiple key registrations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"State Recovery"}),": Automatic return to safe states on errors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Memory Management"}),": Fixed-size arrays with bounds checking"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Power Cycle Safety"}),": All critical data persisted to flash"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-characteristics",children:"Performance Characteristics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Response Time"}),": < 50ms for keypad input processing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flash Write Time"}),": ~100ms per sector (4KB)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Memory Usage"}),": ~32KB RAM, 12KB persistent flash"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Power Consumption"}),": ~50mA active, supports continuous operation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"System Uptime"}),": Tracked continuously, persistent across resets"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/",children:"RP2040 Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/jamwaffles/ssd1306",children:"SSD1306 Rust driver"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/rp-rs/rp-hal/tree/main/examples",children:"rp-hal examples"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://components101.com/sensors/hc-sr501-pir-sensor",children:"PIR sensor datasheet"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},83194:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/hello-world-full-a3b441e875541807156eb4cdd9cff6ff.webp"},67834:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/keypad-pir-buzzer-305f36dfc61572a392d3b9eae27eda64.webp"},86664:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/leds-test-2bd2706200361b33312c4dc38dc3ffac.webp"},49122:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/traieste-lcd-servo-7f8dd2ed1731c8a5487087acccc424bf.webp"},29851:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/schematic-bd93f85837aa83afd4a13d570667ca62.svg"},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(96540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);