"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5350],{21842:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"project/2025/pconstantinescu0206/index","title":"Mood Tracker","description":"An emotional journal based on button inputs for daily mood tracking and sentiment analysis.","source":"@site/versioned_docs/version-fils_en/project/2025/pconstantinescu0206/index.md","sourceDirName":"project/2025/pconstantinescu0206","slug":"/project/2025/pconstantinescu0206/","permalink":"/docs/fils_en/project/2025/pconstantinescu0206/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/pconstantinescu0206/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Smart Door","permalink":"/docs/fils_en/project/2025/octavian.cretu/"},"next":{"title":"Car with Parking Sensors","permalink":"/docs/fils_en/project/2025/petru_andrei.popazu/"}}');var r=i(74848),n=i(28453);const d={},a="Mood Tracker",o={},l=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 18 - 24 August",id:"week-18---24-august",level:3},{value:"Week 25-31",id:"week-25-31",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function c(e){const t={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"mood-tracker",children:"Mood Tracker"})}),"\n",(0,r.jsx)(t.p,{children:"An emotional journal based on button inputs for daily mood tracking and sentiment analysis."}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Author"}),": Constantinescu Patricia Miriam ",(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"GitHub Project Link"}),": ",(0,r.jsx)(t.a,{href:"https://github.com/UPB-PMRust-Students/project-miriamct20",children:"https://github.com/UPB-PMRust-Students/project-miriamct20"})]})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(t.p,{children:["A simple mood tracking device that allows users to record their daily emotional state by pressing buttons representing their mood state. The device saves these states and displays a graph of the last 7 days on a small LCD screen, providing a visual representation of emotional patterns so that the user can see his ups and downs.After the 7 inputs a mood analysis will be done based on the mix of emotions. ",(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Future ideas"})," : Implement the analysis via ChatGPT implementing it via its API and the wireless capability of Pico 2W."]}),"\n",(0,r.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,r.jsx)(t.p,{children:"I chose this project because keeping track of one's emotional state can be beneficial for mental health awareness. A physical device with simple button inputs makes the process of mood tracking more tangible and accessible than smartphone apps, potentially encouraging more consistent usage. I'm also interested in creating a device that combines hardware interaction with data visualization."}),"\n",(0,r.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(t.p,{children:"The main components of the system are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Input Module"}),": Buttons for mood selection (happy/sad/neutral)"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Storage Module"}),": EEPROM for persistent mood data storage(can be implemented for future storage capability for removing the need to be plugged nonstop)"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Processing Unit"}),": Raspberry Pi Pico 2W as the central controller"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Display Module"}),": LCD screen for visualization of mood data and analysis"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"These components interact as follows:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"User inputs mood via button presses"}),"\n",(0,r.jsx)(t.li,{children:"The Processing Unit registers the input and stores it memory"}),"\n",(0,r.jsx)(t.li,{children:"The Processing Unit processes data and generates visualization"}),"\n",(0,r.jsx)(t.li,{children:"The Display Module shows the mood history graph"}),"\n",(0,r.jsx)(t.li,{children:"The inputs determine a weekly analysis that will be shown below the graph"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,r.jsx)(t.h3,{id:"week-18---24-august",children:"Week 18 - 24 August"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Set up development environment"}),"\n",(0,r.jsx)(t.li,{children:"Created initial project structure"}),"\n",(0,r.jsx)(t.li,{children:"Polished the documentation"}),"\n",(0,r.jsx)(t.li,{children:"Ordered the broken hardware"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"week-25-31",children:"Week 25-31"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Finished software with some optimization (DRY) and created a static component for faster render after inputs"}),"\n",(0,r.jsx)(t.li,{children:"Added a restart the process function"}),"\n",(0,r.jsx)(t.li,{children:"Assembled hardware in final form"}),"\n",(0,r.jsx)(t.li,{children:"Thought of some other features that can be implemented"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Hardware",src:i(18737).A+"",width:"576",height:"768"})}),"\n",(0,r.jsx)(t.p,{children:'The project uses a Raspberry Pi Pico 2W as the main controller, with a 2.4" LCD screen for display and (optionally) an AT24C256 EEPROM module for data storage. Buttons for input and basic resistors are used for the interface.'}),"\n",(0,r.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"HardwareSchematics",src:i(23480).A+"",width:"1437",height:"834"})}),"\n",(0,r.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Device"}),(0,r.jsx)(t.th,{children:"Usage"}),(0,r.jsx)(t.th,{children:"Price"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["2X ",(0,r.jsx)(t.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-pico.html",children:"Raspberry Pi Pico 2W"})]}),(0,r.jsx)(t.td,{children:"Main microcontroller"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/raspberry-pi-boards/12394-raspberry-pi-pico-w.html",children:"80 RON"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.adafruit.com/product/2478",children:'2.4" LCD Display'})}),(0,r.jsx)(t.td,{children:"Displays mood history graph"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/displays/lcd-displays",children:"40 RON"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.microchip.com/wwwproducts/en/AT24C256",children:"AT24C256 EEPROM Module"})}),(0,r.jsx)(t.td,{children:"Stores mood history data"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/storage-modules",children:"9 RON"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["4 ",(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/breadboards/hq830-breadboard-kit",children:"HQ830 Breadboard Kit"})]}),(0,r.jsx)(t.td,{children:"For prototyping"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/breadboards/hq830-breadboard-kit",children:"88 RON"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Push Buttons and Resistors"}),(0,r.jsx)(t.td,{children:"User input interface"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches",children:"5 RON"})})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Library"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Usage"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["experimental ",(0,r.jsx)(t.a,{href:"https://github.com/littlefs-project/littlefs",children:"LittleFS"})]}),(0,r.jsx)(t.td,{children:"File system for microcontrollers"}),(0,r.jsx)(t.td,{children:"Storage of mood data on the Pico"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/almindor/st7789",children:"ST7789"})}),(0,r.jsx)(t.td,{children:"Display driver for LCD"}),(0,r.jsx)(t.td,{children:'Interfacing with the 2.4" LCD display'})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/embedded-graphics/embedded-graphics",children:"embedded-graphics"})}),(0,r.jsx)(t.td,{children:"2D graphics library"}),(0,r.jsx)(t.td,{children:"Creating the mood history graph"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/arduino-libraries/Arduino_EEPROM",children:"I2C-EEPROM"})}),(0,r.jsx)(t.td,{children:"EEPROM interface library"}),(0,r.jsx)(t.td,{children:"Communication with the AT24C256 module"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/raspberrypi/pico-sdk",children:"pico-sdk"})}),(0,r.jsx)(t.td,{children:"Raspberry Pi Pico SDK"}),(0,r.jsx)(t.td,{children:"Core functionality for the Pico W"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,r.jsx)(t.td,{children:"Hardware abstraction layer"}),(0,r.jsx)(t.td,{children:"Consistent interface for hardware components"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.verywellmind.com/mood-tracking-4171656",children:"Mood Tracking for Mental Health"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://github.com/rp-rs/rp-hal",children:"Rust on Raspberry Pi Pico"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.embedded.com/working-with-eeprom-in-embedded-systems/",children:"Working with EEPROM in Embedded Systems"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://cdn-shop.adafruit.com/datasheets/ST7789V.pdf",children:"ST7789 Display Controller Guide"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.embedded.com/data-visualization-techniques-for-embedded-systems/",children:"Data Visualization on Embedded Devices"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},18737:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/Hardware-64874a5a930399c3ace96f8c48e7be39.webp"},23480:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/KiCadScheme-6d0602f8dfa63077fc07c68679a8de3b.svg"},28453:(e,t,i)=>{i.d(t,{R:()=>d,x:()=>a});var s=i(96540);const r={},n=s.createContext(r);function d(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);