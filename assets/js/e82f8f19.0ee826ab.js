"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6688],{17239:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"project/2025/rares_stefan.visan/index","title":"Tic-Tac-Toe Contactless Game","description":"This project brings the timeless fun of Tic-Tac-Toe to life with a touchless, futuristic twist, letting you play the classic game using your bare hands.","source":"@site/versioned_docs/version-acs_cc/project/2025/rares_stefan.visan/index.md","sourceDirName":"project/2025/rares_stefan.visan","slug":"/project/2025/rares_stefan.visan/","permalink":"/docs/acs_cc/project/2025/rares_stefan.visan/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/rares_stefan.visan/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Cat Feeder","permalink":"/docs/acs_cc/project/2025/rares_mihail.clinci/"},"next":{"title":"Fire Prevention & Alarm System","permalink":"/docs/acs_cc/project/2025/razvan.costea2205/"}}');var n=i(74848),r=i(28453);const d={},a="Tic-Tac-Toe Contactless Game",c={},l=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"3. Architecture",id:"3-architecture",level:2},{value:"Diagram",id:"diagram",level:3},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Software Diagram",id:"software-diagram",level:4},{value:"Links",id:"links",level:2}];function o(e){const s={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"tic-tac-toe-contactless-game",children:"Tic-Tac-Toe Contactless Game"})}),"\n",(0,n.jsx)(s.p,{children:"This project brings the timeless fun of Tic-Tac-Toe to life with a touchless, futuristic twist, letting you play the classic game using your bare hands."}),"\n",(0,n.jsxs)(s.admonition,{type:"info",children:[(0,n.jsx)(s.mdxAdmonitionTitle,{}),(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Author"}),": Visan Rares-Stefan ",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"GitHub Project Link"}),": ",(0,n.jsx)(s.a,{href:"https://github.com/UPB-PMRust-Students/proiect-raresvizan.git",children:"https://github.com/UPB-PMRust-Students/proiect-raresvizan.git"})]})]}),"\n",(0,n.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(s.p,{children:"This project implements a physical Tic-Tac-Toe (X and O) game using a 16x16 LED matrix display driven by a Raspberry Pi Pico 2W. Players interact with the game using ultrasonic distance sensors, pointing with their hands to select grid positions. A passive buzzer provides audio feedback, and two physical buttons are used for confirming moves and resetting the game."}),"\n",(0,n.jsx)(s.h2,{id:"motivation",children:"Motivation"}),"\n",(0,n.jsx)(s.p,{children:"The motivation behind this project is:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"To explore human\u2013machine interaction through non-traditional interfaces."}),"\n",(0,n.jsx)(s.li,{children:"To create interactive and fun embedded system for the boring old game of Tic-Tac-Toe played by everyone during classes."}),"\n",(0,n.jsx)(s.li,{children:"To try an unique way of choosing the desired cell. No basic buttons, no Playstation type joysticks from 2003...DISTANCE SENSORS & BARE HANDS."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"3-architecture",children:"3. Architecture"}),"\n",(0,n.jsx)(s.p,{children:"The system has the following layers:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Input Layer"}),":","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"3x Ultrasonic distance sensors (for selecting grid positions using finger)"}),"\n",(0,n.jsx)(s.li,{children:"2x Push-buttons (confirm, reset, etc.)"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Processing Layer"}),":","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Raspberry Pi Pico 2W"}),"\n",(0,n.jsx)(s.li,{children:"Game logic engine written in Rust"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Output Layer"}),":","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"4x MAX7219-controlled 8x8 LED matrices"}),"\n",(0,n.jsx)(s.li,{children:"1x Passive buzzer for sound feedback"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Communication is done using:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Component"}),(0,n.jsx)(s.th,{children:"Interface"}),(0,n.jsx)(s.th,{children:"Connection Notes"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"LED Matrix (4x)"}),(0,n.jsx)(s.td,{children:"SPI"}),(0,n.jsx)(s.td,{children:"DIN, CLK, CS to SPI bus"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Ultrasonic Sensors"}),(0,n.jsx)(s.td,{children:"GPIO"}),(0,n.jsx)(s.td,{children:"Each sensor uses TRIG + ECHO"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Buzzer"}),(0,n.jsx)(s.td,{children:"PWM"}),(0,n.jsx)(s.td,{children:"Simple digital on/off control"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Push Buttons"}),(0,n.jsx)(s.td,{children:"GPIO"}),(0,n.jsx)(s.td,{children:"Connected to GPIO with pull-ups"})]})]})]}),"\n",(0,n.jsx)(s.h3,{id:"diagram",children:"Diagram"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Schematic Diagram",src:i(36047).A+""})}),"\n",(0,n.jsx)(s.h2,{id:"log",children:"Log"}),"\n",(0,n.jsx)(s.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,n.jsx)(s.p,{children:"Documentation milestone, materials purchase, preparing materials for installation and testing the components."}),"\n",(0,n.jsx)(s.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,n.jsx)(s.p,{children:"Assembled all the materials and wired everything up. Wrote test software for each component to check good installation. Created the schematics in KiCad mirroring the phisical connections. Completed the Hardware Milestone."}),"\n",(0,n.jsx)(s.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,n.jsx)(s.p,{children:"This week, I completed the source code for the project and finalized all necessary features. I built a custom box from cardboard to house the components securely and hide the wiring. Additionally, I wrote the README file and prepared the full software documentation. With these steps, I have successfully completed the Software Milestone."}),"\n",(0,n.jsx)(s.h2,{id:"hardware",children:"Hardware"}),"\n",(0,n.jsx)(s.p,{children:"The Raspberry Pi Pico 2W is the central microcontroller for the Contactless Tic-Tac-Toe Game."}),"\n",(0,n.jsx)(s.p,{children:"It reads input from three HC-SR04P ultrasonic sensors to detect hand proximity, allowing players to choose the row and column of the cell without touching anything."}),"\n",(0,n.jsx)(s.p,{children:"The 4 x MAX7219 8x8 LED Matrix modules are separately connected to the microcontroller. All four matrices share the same DIN and CLK lines (SPI bus). Each matrix has its own Chip Select (CS) line, allowing the Raspberry Pi Pico to control them independently via SPI."}),"\n",(0,n.jsx)(s.p,{children:"All the hardware components are mounted on a cardboard base, with the LED matrices arranged to form a 16x16 grid. The sensors are positioned on the sides of the matrices to detect hand movements, and the buttons are easily accessible for player interaction. All wires are are hidden under the cardboard to create a clean and user-friendly interface."}),"\n",(0,n.jsx)(s.p,{children:"Two tactile push buttons are used to confirm actions and reset the game."}),"\n",(0,n.jsx)(s.p,{children:"A passive buzzer generates sound effects, enhancing user feedback and engagement."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://imgur.com/urttDcY",children:"VIDEO: Testing the Components"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.img,{alt:"Hardware1",src:i(81933).A+"",width:"1024",height:"665"}),"\n",(0,n.jsx)(s.img,{alt:"Hardware2",src:i(87264).A+"",width:"1024",height:"727"}),"\n",(0,n.jsx)(s.img,{alt:"Hardware3",src:i(17667).A+"",width:"860",height:"719"})]}),"\n",(0,n.jsx)(s.h3,{id:"schematics",children:"Schematics"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Schematic KiCad",src:i(62380).A+"",width:"1024",height:"724"})}),"\n",(0,n.jsx)(s.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Device"}),(0,n.jsx)(s.th,{children:"Usage"}),(0,n.jsx)(s.th,{children:"Price"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/raspberry-pi-boards/13327-raspberry-pi-pico-2-w.html",children:"Raspberry Pi Pico 2W"})}),(0,n.jsx)(s.td,{children:"The microcontroller"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/raspberry-pi-boards/13327-raspberry-pi-pico-2-w.html",children:"2 x 40 RON"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/led-matrices/118-max7219-led-dot-matrix-module.html",children:"MAX7219 LED Matrix"})}),(0,n.jsx)(s.td,{children:"Displaying the game (Output Device)"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/led-matrices/118-max7219-led-dot-matrix-module.html",children:"4 x 17.5 RON"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/distance-sensors/8150-hc-sr04p-ultrasonic-distance-sensor-3-55-v.html",children:"HC-SR04P Ultrasonic"})}),(0,n.jsx)(s.td,{children:"Selecting the cell by hand (Input Device)"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/distance-sensors/8150-hc-sr04p-ultrasonic-distance-sensor-3-55-v.html",children:"3 x 7 RON"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/buzzers/12247-3-v-or-33v-passive-buzzer.html",children:"Passive Buzzer"})}),(0,n.jsx)(s.td,{children:"Selecting the cell by hand (Input Device)"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/buzzers/12247-3-v-or-33v-passive-buzzer.html",children:"1 RON"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches/1114-red-button-with-round-cover.html",children:"Push Button"})}),(0,n.jsx)(s.td,{children:"Confirm move / Reset Game"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/buttons-and-switches/1114-red-button-with-round-cover.html",children:"2 x 2 RON"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/breadboards/44-400p-hq-breadboard.html",children:"Breadboard"})}),(0,n.jsx)(s.td,{children:"Testing the connections"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/breadboards/44-400p-hq-breadboard.html",children:"2 x 5 RON"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/wires-with-connectors/885-wires-male-male-10p-10cm.html",children:"Jumper wires"})}),(0,n.jsx)(s.td,{children:"Connecting the components"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://www.optimusdigital.ro/en/wires-with-connectors/885-wires-male-male-10p-10cm.html",children:"5 x 3 RON"})})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"Total"})}),(0,n.jsx)(s.td,{}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"200 RON"})})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"software",children:"Software"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Library"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Usage"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:(0,n.jsx)(s.code,{children:"embassy"})})}),(0,n.jsx)(s.td,{children:"Async framework for embedded Rust"}),(0,n.jsx)(s.td,{children:"Manages async tasks for input polling, game logic, and display updates"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:(0,n.jsx)(s.code,{children:"embassy-rp"})})}),(0,n.jsx)(s.td,{children:"Embassy RP2040 HAL"}),(0,n.jsx)(s.td,{children:"Provides GPIO, SPI, PWM, and peripheral drivers for the Raspberry Pi Pico"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://github.com/rust-embedded/embedded-hal",children:(0,n.jsx)(s.code,{children:"embedded-hal"})})}),(0,n.jsx)(s.td,{children:"Hardware Abstraction Layer for embedded systems"}),(0,n.jsx)(s.td,{children:"Abstracts SPI, GPIO, and digital input for cross-platform embedded support"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://github.com/knurling-rs/defmt",children:(0,n.jsx)(s.code,{children:"defmt"})})}),(0,n.jsx)(s.td,{children:"Logging for embedded systems"}),(0,n.jsx)(s.td,{children:"Used for info/debug output (via RTT) in embedded context"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://github.com/knurling-rs/defmt",children:(0,n.jsx)(s.code,{children:"defmt-rtt"})})}),(0,n.jsx)(s.td,{children:"RTT (Real-Time Transfer) backend for defmt"}),(0,n.jsx)(s.td,{children:"Transports debug logs to the host"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://github.com/probe-rs/probe-rs",children:(0,n.jsx)(s.code,{children:"panic-probe"})})}),(0,n.jsx)(s.td,{children:"Panic handler for embedded systems"}),(0,n.jsx)(s.td,{children:"Handles runtime panics for debugging"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.a,{href:"https://github.com/embassy-rs/embassy",children:(0,n.jsx)(s.code,{children:"embassy-time"})})}),(0,n.jsx)(s.td,{children:"Embassy async timing primitives"}),(0,n.jsx)(s.td,{children:"Used for delays, timers, and async time operations"})]})]})]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Initialization"})," (",(0,n.jsx)(s.code,{children:"main"}),"):","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Configure SPI (1 MHz, Mode 0) for MAX7219"}),"\n",(0,n.jsx)(s.li,{children:"Initialize CS pins, buttons, sensors, buzzer"}),"\n",(0,n.jsx)(s.li,{children:"Set MAX7219 registers: shutdown, display-test, scan-limit, intensity"}),"\n",(0,n.jsx)(s.li,{children:"Initialize push buttons and sensors"}),"\n",(0,n.jsx)(s.li,{children:"Initialize buzzer with PWM"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Welcome Screen"}),": ",(0,n.jsx)(s.code,{children:"select_mode"})," renders a scrolling message across the full 16\xd716 grid."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Input Handling"}),":","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Buttons"}),": Debounced reads on navigation/place pins"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Sensors"}),": Take 7 distance samples, vote on the most consistent row (minimum 4), and resolve conflicts with majority logic"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Game Logic"}),":","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Convert selected row/column into a cell index"}),"\n",(0,n.jsxs)(s.li,{children:["Update the display via ",(0,n.jsx)(s.code,{children:"draw_board_fb"})," function"]}),"\n",(0,n.jsx)(s.li,{children:"After each move, evaluate win/draw conditions"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Feedback"}),":","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Buzzer beep on a successful placement"}),"\n",(0,n.jsx)(s.li,{children:"Victory animation on game end"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"The program begins by initializing the SPI bus and configuring four chip-select pins for four MAX7219 LED matrix displays. It also sets up buttons (navigation and placement), three distance sensors (trigger/echo pins), and a buzzer via PWM."}),"\n",(0,n.jsxs)(s.p,{children:["All four displays are initialized and cleared.\nThe user is prompted to select a game mode (basic button control or sensor-based control). This is done by scrolling text across the displays and checking which button is pressed (",(0,n.jsx)(s.code,{children:"select_mode"})," function)."]}),"\n",(0,n.jsx)(s.p,{children:"The main loop starts a Tic-Tac-Toe game using the selected mode (buttons or sensors). After each game, it updates the score, shows a winner/score screen, and waits before restarting the loop."}),"\n",(0,n.jsx)(s.p,{children:"During the sensor-based input mode, each sensor corresponds to a column of the 3x3 grid. The software continuously measures the distance detected by each sensor. When a finger or object is brought close to a sensor, it registers the selection for its assigned row and column. By combining the readings from all three sensors, the software determines the specific cell that the player intends to choose."}),"\n",(0,n.jsx)(s.h4,{id:"software-diagram",children:"Software Diagram"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Software Diagram",src:i(48171).A+"",width:"1023",height:"1535"})}),"\n",(0,n.jsx)(s.h2,{id:"links",children:"Links"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://circuitdigest.com/microcontroller-projects/gesture-controlled-wireless-home-automation-using-ultrasonic-sensor",children:"Using Ultrasonic Sensors for Gesture Control"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://pico.dev/tutorials/max7219-led-matrix",children:"MAX7219 LED Matrix Tutorial for Raspberry Pi Pico"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://github.com/almindor/max7219",children:"embedded-graphics + MAX7219 Rust Driver"})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://embassy.dev/",children:"Embassy: Async Framework for Embedded Rust"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},81933:(e,s,i)=>{i.d(s,{A:()=>t});const t=i.p+"assets/images/hardware1-261549fae184312d59b1e36e6a160163.webp"},87264:(e,s,i)=>{i.d(s,{A:()=>t});const t=i.p+"assets/images/hardware2-8b6debf4a35416fe770ec20800652e3a.webp"},17667:(e,s,i)=>{i.d(s,{A:()=>t});const t=i.p+"assets/images/hardware3-a9b77cc9104d6121bc5b66d4a9f0b11e.webp"},36047:(e,s,i)=>{i.d(s,{A:()=>t});const t=i.p+"assets/images/schematic_diagram-522d9879a09128f43038a127a599318d.svg"},62380:(e,s,i)=>{i.d(s,{A:()=>t});const t=i.p+"assets/images/schematic_kicad-4fe893f8cba51dc8f19e745a39d817d3.svg"},48171:(e,s,i)=>{i.d(s,{A:()=>t});const t=i.p+"assets/images/software_diagram-e84aca8f0668336e826918576303e0e4.svg"},28453:(e,s,i)=>{i.d(s,{R:()=>d,x:()=>a});var t=i(96540);const n={},r=t.createContext(n);function d(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);