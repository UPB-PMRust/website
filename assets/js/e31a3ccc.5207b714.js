"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6221],{32208:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"project/2025/adragomir2806/index","title":"Raspberry PI-ANO","description":"A compact digital piano with physical keys, wireless audio output via Bluetooth, and interactive sound modes, built on a Raspberry Pi Pico 2W.","source":"@site/versioned_docs/version-fils_en/project/2025/adragomir2806/index.md","sourceDirName":"project/2025/adragomir2806","slug":"/project/2025/adragomir2806/","permalink":"/docs/fils_en/project/2025/adragomir2806/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/adragomir2806/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"RustPark","permalink":"/docs/fils_en/project/2025/aal2/"},"next":{"title":"Dual-Mode Access Control System","permalink":"/docs/fils_en/project/2025/adrian.bitlan/"}}');var s=r(74848),n=r(28453);const o={},a="Raspberry PI-ANO",d={},l=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function c(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"raspberry-pi-ano",children:"Raspberry PI-ANO"})}),"\n",(0,s.jsx)(t.p,{children:"A compact digital piano with physical keys, wireless audio output via Bluetooth, and interactive sound modes, built on a Raspberry Pi Pico 2W."}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.mdxAdmonitionTitle,{}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Author"}),": Dragomir Alexandru ",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"GitHub Project Link"}),": ",(0,s.jsx)(t.a,{href:"https://github.com/UPB-PMRust-Students/project-Alexdr04",children:"https://github.com/UPB-PMRust-Students/project-Alexdr04"})]})]}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"This project is built using a Raspberry Pi Pico 2W, eight push buttons for musical notes, a potentiometer for volume control, and a Bluetooth audio module for wireless sound output. It features a loop mode for recording and repeating note sequences, a distortion toggle for creative audio effects, and status LEDs to indicate the current mode."}),"\n",(0,s.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,s.jsx)(t.p,{children:"I\u2019ve always enjoyed music and wanted to combine that interest with what I\u2019ve learned about embedded systems. This project gives me a fun, hands-on way to explore PWM audio, GPIO input, and Bluetooth output while building something creative and interactive."}),"\n",(0,s.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Schematic diagram",src:r(51811).A+"",width:"660",height:"470"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Controller"}),":",(0,s.jsx)(t.br,{}),"\n","Raspberry Pi Pico 2W \u2014 handles all logic, reads button inputs, and generates audio output via PWM."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Input System"}),":",(0,s.jsx)(t.br,{}),"\n","A set of 8 push buttons for the musical notes and 2 buttons for toggling loop and distortion modes. Connected to the Pico via GPIO."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Audio Processing Unit"}),":",(0,s.jsx)(t.br,{}),"\n","PWM signal from the Pico is passed through a potentiometer for volume control before reaching the Bluetooth module."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Output System"}),":",(0,s.jsx)(t.br,{}),"\n","KCX Bluetooth audio module receives the analog signal and transmits it wirelessly to a portable speaker."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Visual Feedback"}),":",(0,s.jsx)(t.br,{}),"\n","One LED indicate the current playback mode (normal or distortion). Controlled via GPIO."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Power Supply"}),":",(0,s.jsx)(t.br,{}),"\n","A 5V external power source powers the KCX_BT_EMITTER module separately from the Pico, ensuring stable Bluetooth audio output."]}),"\n",(0,s.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,s.jsx)(t.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,s.jsx)(t.p,{children:"After my project was approved, I finalized the component list, ordered everything, and began assembling the hardware. I tested the debugger connection with the Raspberry Pi Pico 2W to ensure proper flashing and communication. I also experimented with basic GPIO inputs and outputs to validate button and LED functionality. Additionally, I started drafting the system schematic in KiCad and planned out the initial wiring layout on the breadboard."}),"\n",(0,s.jsx)(t.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,s.jsx)(t.p,{children:"This week, I finalized the hardware setup on the breadboard, successfully connecting all components including the buttons, potentiometer, filter, and MH-M28 Bluetooth module. I also began writing the software for handling input, audio output, and mode toggling, and made solid progress toward implementing the core functionality. However, I ran into an issue with the Bluetooth module \u2014 it doesn't seem to pair with my portable speaker. I am not entirely sure yet whether the problem is with the module, the speaker, or the way I am using it, but I will investigate further and try different approaches to get it working. If necessary, I will explore replacing the module with one better suited for Bluetooth audio transmission."}),"\n",(0,s.jsx)(t.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,s.jsx)(t.p,{children:"This week, I resolved the Bluetooth pairing issue by replacing the MH-M28 module with a KCX_BT_EMITTER, which worked seamlessly with my portable speaker. After integrating the new module, I finalized all the software, including input handling, audio output, and mode toggling. With everything functioning as intended, the project is now complete. I also made a few minor improvements to the aesthetics of the build, refining the wiring layout and organizing components for a cleaner presentation."}),"\n",(0,s.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsx)(t.p,{children:"The hardware setup centers around a Raspberry Pi Pico 2W, which serves as the main controller. It is connected to eight push buttons used to trigger musical notes and two additional buttons \u2014 one to activate a loop mode that records and replays note sequences, and another to toggle a distortion effect. A single LED provides visual feedback indicating whether the system is currently in distortion mode."}),"\n",(0,s.jsx)(t.p,{children:"To control output volume, a potentiometer is wired between the PWM output and the signal line, which is passed through a low-pass filter to convert it into an analog audio signal. The audio signal from the Pico is smoothed using a passive RC low-pass filter, composed of a 1 k\u03a9 resistor and a 100 nF ceramic capacitor, which attenuates high-frequency components and converts the PWM signal into a usable analog waveform."}),"\n",(0,s.jsx)(t.p,{children:"This filtered audio signal is then sent into the KCX_BT_EMITTER module via its L and R channel inputs. The KCX_BT_EMITTER transmits audio wirelessly to a paired Bluetooth speaker. To ensure stable operation and eliminate audio glitches, a 100 uF electrolytic capacitor was added between the 5V power source and the Bluetooth module. The module is powered by an external 5V source, while the Raspberry Pi Pico and the rest of the components are powered via USB. A common ground line is shared across all parts of the system to maintain electrical reference integrity."}),"\n",(0,s.jsx)(t.p,{children:"The full circuit is prototyped on a breadboard, allowing for flexible testing and easy hardware iteration during development."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Hardware 1",src:r(53035).A+"",width:"405",height:"540"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Hardware 2",src:r(68136).A+"",width:"405",height:"540"})}),"\n",(0,s.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Schematic diagram",src:r(16690).A+"",width:"1024",height:"724"})}),"\n",(0,s.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Device"}),(0,s.jsx)(t.th,{children:"Usage"}),(0,s.jsx)(t.th,{children:"Price"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/raspberry-pi-pico.html",children:"Raspberry Pi Pico 2W \xd72"})}),(0,s.jsx)(t.td,{children:"Microcontroller"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html?search_query=raspberry+pi+pico+2w&results=26",children:"39,66 RON \xd72"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://learn.sparkfun.com/tutorials/how-to-use-a-breadboard/all",children:"Breadboard 830 points \xd72"})}),(0,s.jsx)(t.td,{children:"Prototyping"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/prototipare-breadboard-uri/8-breadboard-830-points.html",children:"9,98 RON \xd72"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://sigmanortec.ro/modul-transmitator-audio-bluetooth-41-ble",children:"KCX_BT_EMITTER"})}),(0,s.jsx)(t.td,{children:"Audio output"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://sigmanortec.ro/modul-transmitator-audio-bluetooth-41-ble",children:"37,68 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.sunfounder.com/projects/kepler-kit/en/latest/component/component_potentiometer.html#potentiometer",children:"Rotary Potentiometer 10k\u03a9"})}),(0,s.jsx)(t.td,{children:"Volume control"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-potentiometre/1886-potentiometru-stereo-10k.html?search_query=potentiometru&results=172",children:"1,99 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.sunfounder.com/projects/kepler-kit/en/latest/component/component_button.html#button",children:"Tactile Button 6x6x6 \xd79"})}),(0,s.jsx)(t.td,{children:"User input"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/butoane-i-comutatoare/1119-buton-6x6x6.html?search_query=butoane+6x6x6&results=1",children:"0,36 RON \xd79"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.electronics-tutorials.ws/diode/diode_8.html",children:"Red LED 5mm"})}),(0,s.jsx)(t.td,{children:"Mode indicator"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-led-uri/29-led-set-3-culori-x-10-pcs-fiecare.html?search_query=led+rosu&results=166",children:"0,39 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://docs.sunfounder.com/projects/kepler-kit/en/latest/component/component_resistor.html",children:"Resistor 220\u03a9 \xd73"})}),(0,s.jsx)(t.td,{children:"LED limiter"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-rezistoare/1097-rezistor-025w-220.html?search_query=rezistor+220&results=22",children:"0,10 RON \xd73"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.circuitbasics.com/how-to-use-breadboard-jumper-wires/",children:"Male-to-Male Jumper Wires"})}),(0,s.jsx)(t.td,{children:"Connections"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/fire-fire-mufate/890-set-fire-tata-tata-40p-30-cm.html?search_query=tata+tata&results=693",children:"7,98 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.circuitbasics.com/how-to-use-breadboard-jumper-wires/",children:"Male-to-Female Jumper Wires"})}),(0,s.jsx)(t.td,{children:"Connections"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/toate-produsele/876-set-fire-mama-tata-10p-15-cm.html?search_query=jumper&results=70",children:"3,99 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://howtomechatronics.com/tutorials/electronics/breadboard-power-supply-module/",children:"5V Breadboard Power Supply Module"})}),(0,s.jsx)(t.td,{children:"Power supply"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/electronica-de-putere-stabilizatoare-liniare/61-sursa-de-alimentare-pentru-breadboard.html",children:"4,69 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.circuitbasics.com/what-is-a-capacitor/",children:"Ceramic Capacitor 100nF"})}),(0,s.jsx)(t.td,{children:"Low-pass filter"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-condensatoare/3927-condensator-100-nf50v.html?search_query=condensator+100nF&results=7",children:"0,69 RON"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.circuitbasics.com/what-is-a-capacitor/",children:"Capacitor 100uF"})}),(0,s.jsx)(t.td,{children:"Power smoothing"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/componente-electronice-condensatoare/1218-condensator-electrolitic-de-100-uf-la-50-v.html?search_query=condensator&results=160",children:"0,99 RON"})})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Library"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Usage"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy"})}),(0,s.jsx)(t.td,{children:"Asynchronous framework for embedded Rust"}),(0,s.jsx)(t.td,{children:"Provides async multitasking (main loop, timers)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-rp"})}),(0,s.jsx)(t.td,{children:"Embassy support crate for Raspberry Pi RP2040"}),(0,s.jsx)(t.td,{children:"Access to GPIO, PWM, and timers on RP2040"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt"})}),(0,s.jsx)(t.td,{children:"Lightweight logging framework for embedded systems"}),(0,s.jsx)(t.td,{children:"Used for logging pressed notes and debugging"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/knurling-rs/panic-probe",children:"panic-probe"})}),(0,s.jsx)(t.td,{children:"Panic handler for embedded development"}),(0,s.jsxs)(t.td,{children:["Captures and displays panics through ",(0,s.jsx)(t.code,{children:"defmt"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/japaric/heapless",children:"heapless"})}),(0,s.jsx)(t.td,{children:"Data structures without dynamic memory allocation"}),(0,s.jsx)(t.td,{children:"Used to store recorded note sequences and durations"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://gurgleapps.com/learn/projects/diy-raspberrypi-pico-piano-project",children:"inspiration"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},51811:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/FINALdiagram-4ba3d237ac6d3b1d614f983164235b87.webp"},16690:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/FINALkicad-e76d37f5b803f578ddfaf611760c145f.svg"},53035:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/Poza1FINAL-11f125b3aa967fa680c717184dce680e.webp"},68136:(e,t,r)=>{r.d(t,{A:()=>i});const i=r.p+"assets/images/Poza2FINAL-1acdacd5510ceaadf468c371a7fc54f6.webp"},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var i=r(96540);const s={},n=i.createContext(s);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);